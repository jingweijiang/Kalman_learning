clc;
clear all;
close all;
N=120;%采样点个数，时间单位是分钟
constant=25;%室内温度的理论值，受过程噪声的干扰，该值会有波动
%对状态和测量初始化
Xexcept=constant*ones(1,N);%房间各时刻真是温度值
Xkf=zeros(1,N);%卡尔曼滤波处理的状态，也叫估计值
Z=zeros(1,N);%温度测量值
P=zeros(1,N);
%赋初值
X(1)=25.1;%假设房间温度为25.1℃
P(1)=0.01;%初始值的协方差
Z(1)=24.9;
Xkf(1)=Z(1);%初始测量值为24.9℃，可作为滤波器的初始估计状态
%噪声
Q=0.01;
R=0.25;
W=sqrt(Q)*randn(1,N);%方差决定噪声大小
V=sqrt(R)*randn(1,N);%方差决定噪声大小
%系数矩阵
F=1;
G=1;
H=1;
I=eye(1);%本系统状态为一维
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%模拟房间温度和测量过程并滤波
for k=2:N
  %第一步：随时间推移，房间真实温度波动变化
    %k时刻房间真实温度，对于温度传感器来说，这个真实值是不知道的
    X(k)=F*X(k-1)+G*W(k-1);
    %第二步：随时间推移，获取真实数据
    %温度传感器对k时刻房间的测量
    %Kalman滤波是站在温度传感器角度进行的，它不知道此刻真实状态X(k)，只能利用上
    %次测量值Z(k)和上次估计值Xkf(k)来做处理，其目的是最大限度地降低测量噪声R的
    %干扰，尽可能地逼近X(k),这也是Kalman滤波的本质目的
    Z(k)=H*X(k)+V(k);
    %第三步：Kalman滤波
    %有了k时刻的观测值Z(k)和k-1时刻的状态，就可以进行滤波过程
    X_pre=F*Xkf(k-1);              %状态预测；
    P_pre=F*P(k-1)*F'+Q;           %协方差预测
    Kg=P_pre*inv(H*P_pre*H'+R);    %计算kalman增益
    e=Z(k)-H*X_pre;                %新息
    Xkf(k)=X_pre+Kg*e;             %状态更新
    P(k)=(I-Kg*H)*P_pre;           %协方差更新
end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%计算误差
Err_Measure=zeros(1,N);%测量值与真实值之间的偏差
Err_Kalman=zeros(1,N); %估计值与真实值之间的偏差
for k=1:N
    Err_Measure(k)=abs(Z(k)-X(k));
    Err_Kalman(k)=abs(Xkf(k)-X(k));
end
t=1:N;
figure%画图显示
%依次输出理论值，叠加过程噪声（受波动影响）的真实值，温度传感器和Kalman估计值
plot(t,Xexcept,'-b',t,X,'-r',t,Z,'-ko',t,Xkf,'-g*');
legend('期望值','真实值','观测值','Kalman滤波值');
xlabel('采样时间/s');
ylabel('温度/℃');
figure;%画图显示
plot(t,Err_Measure,'-b',t,Err_Kalman,'-K*');
legend('测量偏差','Kalman滤波偏差');
xlabel('采样时间/s');
ylabel('温度偏差/℃');
